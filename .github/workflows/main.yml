# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "main" branch
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  setup:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.11

      - name: Install Dependencies
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install

      - name: Cache Virtualenv
        uses: actions/cache@v2
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

  tests:
    runs-on: ubuntu-latest
    needs: [setup]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Run Tests & Check Coverage
        run: |
          poetry run python -m coverage run -m unittest discover
          poetry run python -m coverage report -m --skip-covered --omit 'tests/*'

      - name: Cache Coverage
        if: github.event_name != 'pull_request'
        uses: actions/cache@v2
        continue-on-error: true
        with:
          path: ./.coverage
          key: test-coverage

  build:
    runs-on: ubuntu-latest
    needs: [tests]
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Download Build
        uses: actions/download-artifact@v3
        continue-on-error: true
        with:
          name: dist

      - name: Build Project
        run: poetry build

      - name: Upload Build
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist/
