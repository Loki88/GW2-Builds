name: CI
on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

  workflow_dispatch:

concurrency:
  group: ${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

jobs:
  pre-commit:
    name: Pre-Commit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - uses: pre-commit/action@v3.0.0
        with:
          extra_args: --all-files

  test-and-build:
    name: Test and Build
    runs-on: ubuntu-latest
    needs: pre-commit
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: 3.10.11

      - name: Cache Virtualenv
        uses: actions/cache@v3
        with:
          path: ./.venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}

      - name: Install Dependencies
        run: |
          pip install poetry
          poetry config virtualenvs.in-project true
          poetry install

      - name: Cache Coverage
        if: github.event_name != 'pull_request'
        uses: actions/cache@v3
        continue-on-error: true
        with:
          path: ./.coverage
          key: test-coverage

      - name: Run Tests & Check Coverage
        run: |
          poetry run python -m coverage run -m unittest discover
          poetry run python -m coverage report -m --skip-covered --omit 'tests/*'

      - name: Cache Build
        if: github.event_name != 'pull_request'
        uses: actions/cache@v3
        continue-on-error: true
        with:
          path: ./dist
          key: ${{ runner.os }}-dist

      - name: Build Project
        run: poetry build
